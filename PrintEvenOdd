    package com.consumer.service;

    import java.util.concurrent.*;
    import java.util.function.Predicate;

    public class Test  {

        private Object lock=new Object();
        int count=0;
        public  void evenNum() throws InterruptedException {
            for (int i = 0; i < 5; i+=2) {
                synchronized (lock) {
                    while (count % 2 != 0)
                        lock.wait();

                    System.out.println(i);
                    count++;
                    lock.notify();
                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }
                }
            }
            System.out.println(Thread.currentThread().getName());
        }
        public  void oddNum() throws InterruptedException {
            for (int i = 1; i <= 5; i+=2) {
                synchronized (lock) {
                    while (count % 2 == 0)
                        lock.wait();

                System.out.println(i);
                count++;
                lock.notify();
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
             }
            }
            System.out.println(Thread.currentThread().getName());
        }
        public static void main(String[] args)  {
            Test obj=new Test();
            ExecutorService excetor=Executors.newCachedThreadPool();
            excetor.submit(()->{
                try {
                    obj.evenNum();
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
                ;
            });
            excetor.submit(()->{
                try {
                    obj.oddNum();
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
            });
            //excetor.submit(odd);
            excetor.shutdown();
        }
    }
